function raw = f_importXL(fname)
% - import Perkin-Elmer Elan format (*.xl or *.csv) LA-ICP-MS transient signal data
%
% USAGE: raw = f_importXL('fname');
%
% fname = name of *.xl file to import
%
% raw = structure with the following fields:
%  .s     = seconds
%  .cps   = signal intensity in counts per sec
%  .txt   = cell array of isotope labels for columns of 'cps'
%  .iso   = corresponding isotope number
%  .hh    = hour of acquisition
%  .mm    = minute of acquisition
%  .gDate = cell array of Gregorian date of acquisition
%
% SEE ALSO: f_cpsParse, f_cps2ppm

% -----Notes:-----
% Time resolved analysis (TRA) data generated by the Agilent Technologies
% ICP-MS program can be imported using this function by first exporting the data
% as comma-separated-values via the "Tabulate chart CPS data to CSV'
% command in the Agilent program.

% -----Author:-----
% by David L. Jones, Aug-2010
% 
% This file is part of the FATHOM Toolbox for Matlab and
% is released under the GNU General Public License, version 2.

% Oct-2010: now supports a time stamp for subsequent drift correction
% Nov-2010: updated documentation
% Jun-2011: now outputs date stamp

temp    = importdata(fname,',');
raw.s   = temp.data(:,1);                                         % seconds
raw.cps = temp.data(:,2:end);                                     % signal intensity (cps)
raw.txt = regexprep(temp.colheaders(2:end),'\d', '');             % element labels
raw.iso = str2double(regexprep(temp.colheaders(2:end),'\D', '')); % isotopes

% -----Add time/date stamp if present:-----
raw.hh    = NaN;
raw.mm    = NaN;
raw.gDate = {'NaN'}; % initialize

for i = 1:size(temp.textdata,1)
   txt  = temp.textdata{i,1};
   if (~isempty(regexp(txt,'Acquired ')))
      
      hhmm = regexp(txt,'\d+:\d+','match'); % 04:28
      pm   = regexp(txt,' pm ','match');    % pm
      hh   = str2double(hhmm{:}(1:2));
      mm   = str2double(hhmm{:}(4:5));
      
      if (~isempty(pm)) && (hh<=11)
         hh = hh+12;
      end
      
      % Extract date:
      yr = str2double(regexp(txt,'(?<=\s)\d{4}(?=\s)','match'));   % 2011
      mn = regexp(txt,'(?<=\s)[A-Z]{1}[a-z]{2}(?=\s)','match');    % Jun
      dy = str2double(regexp(txt,'(?<=\s)\d{1,2}(?=\s)','match')); % 10
      
      % Convert month string to month number:
      mn = f_month2num(mn{:});
      
      % Convert to Gregorian date:
      gDate = f_gregorian(f_julian([yr mn dy hh mm]),yr);
      
      % Output with results:
      raw.hh    = hh;
      raw.mm    = mm;
      raw.gDate = gDate;
   end
end
